import Foundation

//1. Написать функцию, которая определяет, четное число или нет.
func firstTask(firstDiv:Int){
let x=firstDiv
let y=x%2
    y==0 ? print("Число",x,"четное"):print("Число ",x," нечетное")
}
firstTask(firstDiv:20)

//2. Написать функцию, которая определяет, делится ли число без остатка на 3.
func secondTask(secondDiv:Int){
let x=secondDiv
let y=x%3
    y==0 ? print("Число",x,"делится на 3 без остатка"):print("Число ",x," не делится на 3 без остатка")
}
secondTask(secondDiv:21)

//3. Создать возрастающий массив из 100 чисел.
var firstArray: [Int] = []
for i in 0...100 {
    firstArray.append(i)
}
print(firstArray)

//4. Удалить из этого массива все четные числа и все числа, которые не делятся на 3.
for value in firstArray {
    if (value % 3) != 0 {
        firstArray.remove(at: firstArray.firstIndex(of: value)!)
    }
}
for value in firstArray {
    if (value % 2) == 0 {
        firstArray.remove(at: firstArray.firstIndex(of: value)!)
    }
}
print(firstArray)

//5. * Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее 50 элементов. Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.
//6. * Заполнить массив из 100 элементов различными простыми числами. Натуральное число, большее единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги: a. Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).b. Пусть переменная p изначально равна двум — первому простому числу. c. Зачеркнуть в списке числа от 2 + p до n, считая шагом p.. d. Найти первое не зачёркнутое число в списке, большее, чем p, и присвоить значению переменной p это число. e. Повторять шаги c и d, пока возможно.
